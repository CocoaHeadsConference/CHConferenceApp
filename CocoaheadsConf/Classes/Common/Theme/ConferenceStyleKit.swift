//
//  ConferenceStyleKit.swift
//  CHConferenceApp
//
//  Created by Brunogb on 21/11/16.
//  Copyright Â© 2016 CompanyName. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class ConferenceStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static var imageOfBackButton: UIImage?
        static var backButtonTargets: [AnyObject]?
        static var imageOfCloseButton: UIImage?
        static var closeButtonTargets: [AnyObject]?
        static var imageOfCocoaHeadsLogo: UIImage?
        static var cocoaHeadsLogoTargets: [AnyObject]?
    }

    //// Drawing Methods

    public dynamic class func drawBackButton() {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 90, y: 10))
        bezierPath.addCurve(to: CGPoint(x: 33, y: 59), controlPoint1: CGPoint(x: 33, y: 59), controlPoint2: CGPoint(x: 33, y: 59))
        bezierPath.addLine(to: CGPoint(x: 90, y: 107))
        UIColor.black.setStroke()
        bezierPath.lineWidth = 10
        bezierPath.stroke()
    }

    public dynamic class func drawCloseButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 100, resizedFrame.height / 100)


        //// Color Declarations
        let shadowColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = shadowColor.withAlphaComponent(0.6 * shadowColor.cgColor.alpha)
        shadow.shadowOffset = CGSize(width: 0, height: 0)
        shadow.shadowBlurRadius = 7

        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: 7.96, y: 12.13)
        context.rotate(by: -3 * CGFloat.pi/180)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 80, height: 80))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow.shadowOffset.width * resizedShadowScale, height: shadow.shadowOffset.height * resizedShadowScale), blur: shadow.shadowBlurRadius * resizedShadowScale, color: (shadow.shadowColor as! UIColor).cgColor)
        UIColor.black.setStroke()
        ovalPath.lineWidth = 4
        ovalPath.stroke()
        context.restoreGState()

        context.restoreGState()


        //// Group
        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 31.03, y: 23.01)
        context.rotate(by: -3 * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 0.71, y: 4.7))
        bezierPath.addLine(to: CGPoint(x: 32.62, y: 52.94))
        UIColor.black.setStroke()
        bezierPath.lineWidth = 4
        bezierPath.stroke()

        context.restoreGState()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 69.03, y: 27.82)
        context.rotate(by: 72 * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 0, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 32.51, y: 49.45))
        UIColor.black.setStroke()
        bezier2Path.lineWidth = 4
        bezier2Path.stroke()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawCocoaHeadsLogo(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 600, height: 600), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 600, height: 600), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 600, y: resizedFrame.height / 600)


        //// Color Declarations
        let fillColor2 = UIColor(red: 0.006, green: 0.011, blue: 0.009, alpha: 1.000)
        let fillColor3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 260.7, y: 113.81))
        bezierPath.addCurve(to: CGPoint(x: 264.13, y: 114.41), controlPoint1: CGPoint(x: 261.87, y: 113.32), controlPoint2: CGPoint(x: 263, y: 114.17))
        bezierPath.addCurve(to: CGPoint(x: 278.92, y: 125.89), controlPoint1: CGPoint(x: 270.17, y: 116.12), controlPoint2: CGPoint(x: 275.49, y: 120.34))
        bezierPath.addCurve(to: CGPoint(x: 282.72, y: 158), controlPoint1: CGPoint(x: 284.71, y: 135.24), controlPoint2: CGPoint(x: 285.78, y: 147.4))
        bezierPath.addCurve(to: CGPoint(x: 271.36, y: 187.7), controlPoint1: CGPoint(x: 279.62, y: 168.19), controlPoint2: CGPoint(x: 273.52, y: 177.15))
        bezierPath.addCurve(to: CGPoint(x: 273.68, y: 197.89), controlPoint1: CGPoint(x: 270.81, y: 191.26), controlPoint2: CGPoint(x: 271.84, y: 194.91))
        bezierPath.addCurve(to: CGPoint(x: 281.27, y: 206.7), controlPoint1: CGPoint(x: 275.75, y: 201.24), controlPoint2: CGPoint(x: 278.53, y: 203.99))
        bezierPath.addCurve(to: CGPoint(x: 283.38, y: 210.88), controlPoint1: CGPoint(x: 282.39, y: 207.78), controlPoint2: CGPoint(x: 283.3, y: 209.23))
        bezierPath.addCurve(to: CGPoint(x: 274.73, y: 218.07), controlPoint1: CGPoint(x: 283.71, y: 215.49), controlPoint2: CGPoint(x: 278.88, y: 219.54))
        bezierPath.addCurve(to: CGPoint(x: 269.78, y: 214.02), controlPoint1: CGPoint(x: 272.67, y: 217.4), controlPoint2: CGPoint(x: 271.32, y: 215.5))
        bezierPath.addCurve(to: CGPoint(x: 258.86, y: 195.65), controlPoint1: CGPoint(x: 264.94, y: 208.87), controlPoint2: CGPoint(x: 260.51, y: 202.84))
        bezierPath.addCurve(to: CGPoint(x: 259.44, y: 182.19), controlPoint1: CGPoint(x: 257.8, y: 191.21), controlPoint2: CGPoint(x: 258.33, y: 186.55))
        bezierPath.addCurve(to: CGPoint(x: 269.06, y: 157.82), controlPoint1: CGPoint(x: 261.64, y: 173.64), controlPoint2: CGPoint(x: 266.16, y: 166.08))
        bezierPath.addCurve(to: CGPoint(x: 269.98, y: 136.96), controlPoint1: CGPoint(x: 271.68, y: 151.3), controlPoint2: CGPoint(x: 272.22, y: 143.69))
        bezierPath.addCurve(to: CGPoint(x: 263.08, y: 128.6), controlPoint1: CGPoint(x: 268.82, y: 133.36), controlPoint2: CGPoint(x: 266.39, y: 130.17))
        bezierPath.addCurve(to: CGPoint(x: 256.71, y: 125.63), controlPoint1: CGPoint(x: 261.03, y: 127.44), controlPoint2: CGPoint(x: 258.38, y: 127.53))
        bezierPath.addCurve(to: CGPoint(x: 256.32, y: 117.04), controlPoint1: CGPoint(x: 254.62, y: 123.35), controlPoint2: CGPoint(x: 254.74, y: 119.59))
        bezierPath.addCurve(to: CGPoint(x: 260.7, y: 113.81), controlPoint1: CGPoint(x: 257.28, y: 115.34), controlPoint2: CGPoint(x: 258.97, y: 114.37))
        bezierPath.close()
        fillColor2.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 199.51, y: 114.96))
        bezier2Path.addCurve(to: CGPoint(x: 203.23, y: 114.63), controlPoint1: CGPoint(x: 200.68, y: 114.46), controlPoint2: CGPoint(x: 201.99, y: 114.31))
        bezier2Path.addCurve(to: CGPoint(x: 218.19, y: 124.85), controlPoint1: CGPoint(x: 209.15, y: 115.98), controlPoint2: CGPoint(x: 214.54, y: 119.71))
        bezier2Path.addCurve(to: CGPoint(x: 223.31, y: 157.63), controlPoint1: CGPoint(x: 224.72, y: 134.08), controlPoint2: CGPoint(x: 226.22, y: 146.65))
        bezier2Path.addCurve(to: CGPoint(x: 211.69, y: 188.22), controlPoint1: CGPoint(x: 220.32, y: 168.2), controlPoint2: CGPoint(x: 213.93, y: 177.37))
        bezier2Path.addCurve(to: CGPoint(x: 213.65, y: 197.8), controlPoint1: CGPoint(x: 211.19, y: 191.54), controlPoint2: CGPoint(x: 212.02, y: 194.95))
        bezier2Path.addCurve(to: CGPoint(x: 221.1, y: 206.73), controlPoint1: CGPoint(x: 215.6, y: 201.23), controlPoint2: CGPoint(x: 218.36, y: 204.02))
        bezier2Path.addCurve(to: CGPoint(x: 223.7, y: 211.26), controlPoint1: CGPoint(x: 222.37, y: 207.91), controlPoint2: CGPoint(x: 223.56, y: 209.4))
        bezier2Path.addCurve(to: CGPoint(x: 215.01, y: 218.61), controlPoint1: CGPoint(x: 224.16, y: 215.95), controlPoint2: CGPoint(x: 219.22, y: 220.12))
        bezier2Path.addCurve(to: CGPoint(x: 210.76, y: 215.23), controlPoint1: CGPoint(x: 213.27, y: 218.03), controlPoint2: CGPoint(x: 212.04, y: 216.52))
        bezier2Path.addCurve(to: CGPoint(x: 198.84, y: 194.3), controlPoint1: CGPoint(x: 205.23, y: 209.51), controlPoint2: CGPoint(x: 200.11, y: 202.61))
        bezier2Path.addCurve(to: CGPoint(x: 202.98, y: 173.53), controlPoint1: CGPoint(x: 197.89, y: 187.1), controlPoint2: CGPoint(x: 200.27, y: 180.02))
        bezier2Path.addCurve(to: CGPoint(x: 209.36, y: 158.43), controlPoint1: CGPoint(x: 205.1, y: 168.49), controlPoint2: CGPoint(x: 207.54, y: 163.6))
        bezier2Path.addCurve(to: CGPoint(x: 210.93, y: 139.62), controlPoint1: CGPoint(x: 211.77, y: 152.56), controlPoint2: CGPoint(x: 212.36, y: 145.84))
        bezier2Path.addCurve(to: CGPoint(x: 203.63, y: 129.26), controlPoint1: CGPoint(x: 209.97, y: 135.3), controlPoint2: CGPoint(x: 207.52, y: 131.16))
        bezier2Path.addCurve(to: CGPoint(x: 196.92, y: 126.02), controlPoint1: CGPoint(x: 201.47, y: 127.96), controlPoint2: CGPoint(x: 198.62, y: 128.13))
        bezier2Path.addCurve(to: CGPoint(x: 199.51, y: 114.96), controlPoint1: CGPoint(x: 194.1, y: 122.65), controlPoint2: CGPoint(x: 195.66, y: 116.65))
        bezier2Path.close()
        fillColor2.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 323.3, y: 116.88))
        bezier3Path.addCurve(to: CGPoint(x: 325.9, y: 116.68), controlPoint1: CGPoint(x: 324.14, y: 116.61), controlPoint2: CGPoint(x: 325.03, y: 116.55))
        bezier3Path.addCurve(to: CGPoint(x: 342.57, y: 128.85), controlPoint1: CGPoint(x: 332.73, y: 118.07), controlPoint2: CGPoint(x: 338.84, y: 122.64))
        bezier3Path.addCurve(to: CGPoint(x: 346.05, y: 161.25), controlPoint1: CGPoint(x: 348.31, y: 138.33), controlPoint2: CGPoint(x: 349.32, y: 150.61))
        bezier3Path.addCurve(to: CGPoint(x: 336.29, y: 185.06), controlPoint1: CGPoint(x: 343.43, y: 169.48), controlPoint2: CGPoint(x: 338.98, y: 176.87))
        bezier3Path.addCurve(to: CGPoint(x: 335.08, y: 195.55), controlPoint1: CGPoint(x: 335.22, y: 188.41), controlPoint2: CGPoint(x: 334.13, y: 192.02))
        bezier3Path.addCurve(to: CGPoint(x: 344.99, y: 209.62), controlPoint1: CGPoint(x: 336.5, y: 201.45), controlPoint2: CGPoint(x: 340.99, y: 205.61))
        bezier3Path.addCurve(to: CGPoint(x: 346.48, y: 216.28), controlPoint1: CGPoint(x: 346.7, y: 211.26), controlPoint2: CGPoint(x: 347.43, y: 214.01))
        bezier3Path.addCurve(to: CGPoint(x: 336.5, y: 219.87), controlPoint1: CGPoint(x: 345.08, y: 220.34), controlPoint2: CGPoint(x: 339.9, y: 222.59))
        bezier3Path.addCurve(to: CGPoint(x: 327.82, y: 210.1), controlPoint1: CGPoint(x: 333.28, y: 216.98), controlPoint2: CGPoint(x: 330.36, y: 213.67))
        bezier3Path.addCurve(to: CGPoint(x: 321.79, y: 193.1), controlPoint1: CGPoint(x: 324.37, y: 205.2), controlPoint2: CGPoint(x: 321.73, y: 199.33))
        bezier3Path.addCurve(to: CGPoint(x: 326.29, y: 175.35), controlPoint1: CGPoint(x: 321.85, y: 186.89), controlPoint2: CGPoint(x: 323.91, y: 180.94))
        bezier3Path.addCurve(to: CGPoint(x: 332.65, y: 160.26), controlPoint1: CGPoint(x: 328.42, y: 170.32), controlPoint2: CGPoint(x: 330.84, y: 165.43))
        bezier3Path.addCurve(to: CGPoint(x: 334.37, y: 142.98), controlPoint1: CGPoint(x: 334.83, y: 154.85), controlPoint2: CGPoint(x: 335.39, y: 148.75))
        bezier3Path.addCurve(to: CGPoint(x: 327.14, y: 131.61), controlPoint1: CGPoint(x: 333.51, y: 138.39), controlPoint2: CGPoint(x: 331.24, y: 133.75))
        bezier3Path.addCurve(to: CGPoint(x: 320, y: 128.08), controlPoint1: CGPoint(x: 324.88, y: 130.14), controlPoint2: CGPoint(x: 321.8, y: 130.36))
        bezier3Path.addCurve(to: CGPoint(x: 323.3, y: 116.88), controlPoint1: CGPoint(x: 317.11, y: 124.48), controlPoint2: CGPoint(x: 319.09, y: 118.18))
        bezier3Path.close()
        fillColor2.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 273.22, y: 235.34))
        bezier4Path.addCurve(to: CGPoint(x: 304.18, y: 236.8), controlPoint1: CGPoint(x: 283.55, y: 235.15), controlPoint2: CGPoint(x: 293.91, y: 235.55))
        bezier4Path.addCurve(to: CGPoint(x: 310.36, y: 241.09), controlPoint1: CGPoint(x: 306.73, y: 236.99), controlPoint2: CGPoint(x: 309.39, y: 238.45))
        bezier4Path.addCurve(to: CGPoint(x: 306.46, y: 250.03), controlPoint1: CGPoint(x: 311.67, y: 244.54), controlPoint2: CGPoint(x: 309.71, y: 248.79))
        bezier4Path.addCurve(to: CGPoint(x: 302.64, y: 250.04), controlPoint1: CGPoint(x: 305.22, y: 250.47), controlPoint2: CGPoint(x: 303.9, y: 250.16))
        bezier4Path.addCurve(to: CGPoint(x: 273.53, y: 248.7), controlPoint1: CGPoint(x: 292.97, y: 248.92), controlPoint2: CGPoint(x: 283.24, y: 248.54))
        bezier4Path.addCurve(to: CGPoint(x: 242.89, y: 251), controlPoint1: CGPoint(x: 263.29, y: 248.99), controlPoint2: CGPoint(x: 253.07, y: 249.87))
        bezier4Path.addCurve(to: CGPoint(x: 233.82, y: 252.42), controlPoint1: CGPoint(x: 239.86, y: 251.43), controlPoint2: CGPoint(x: 236.79, y: 251.64))
        bezier4Path.addCurve(to: CGPoint(x: 228.83, y: 252.62), controlPoint1: CGPoint(x: 232.23, y: 253.02), controlPoint2: CGPoint(x: 230.42, y: 253.47))
        bezier4Path.addCurve(to: CGPoint(x: 227.1, y: 241.55), controlPoint1: CGPoint(x: 225.09, y: 250.68), controlPoint2: CGPoint(x: 224.28, y: 244.7))
        bezier4Path.addCurve(to: CGPoint(x: 232.34, y: 239.04), controlPoint1: CGPoint(x: 228.42, y: 239.95), controlPoint2: CGPoint(x: 230.43, y: 239.36))
        bezier4Path.addCurve(to: CGPoint(x: 273.22, y: 235.34), controlPoint1: CGPoint(x: 245.88, y: 236.97), controlPoint2: CGPoint(x: 259.54, y: 235.75))
        bezier4Path.close()
        fillColor2.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 346.47, y: 238.83))
        bezier5Path.addCurve(to: CGPoint(x: 373.68, y: 239.25), controlPoint1: CGPoint(x: 355.49, y: 237.47), controlPoint2: CGPoint(x: 364.67, y: 238.01))
        bezier5Path.addCurve(to: CGPoint(x: 403.06, y: 248.61), controlPoint1: CGPoint(x: 383.84, y: 240.74), controlPoint2: CGPoint(x: 393.89, y: 243.65))
        bezier5Path.addCurve(to: CGPoint(x: 419.17, y: 261.61), controlPoint1: CGPoint(x: 409.08, y: 251.9), controlPoint2: CGPoint(x: 414.73, y: 256.15))
        bezier5Path.addCurve(to: CGPoint(x: 426.07, y: 276.43), controlPoint1: CGPoint(x: 422.61, y: 265.8), controlPoint2: CGPoint(x: 425.34, y: 270.85))
        bezier5Path.addCurve(to: CGPoint(x: 423.35, y: 289.21), controlPoint1: CGPoint(x: 426.74, y: 280.85), controlPoint2: CGPoint(x: 425.84, y: 285.58))
        bezier5Path.addCurve(to: CGPoint(x: 410.93, y: 298.97), controlPoint1: CGPoint(x: 420.28, y: 293.74), controlPoint2: CGPoint(x: 415.75, y: 296.92))
        bezier5Path.addCurve(to: CGPoint(x: 390.7, y: 303.65), controlPoint1: CGPoint(x: 404.48, y: 301.73), controlPoint2: CGPoint(x: 397.56, y: 302.83))
        bezier5Path.addCurve(to: CGPoint(x: 390.38, y: 368.04), controlPoint1: CGPoint(x: 388.82, y: 325.05), controlPoint2: CGPoint(x: 388.75, y: 346.62))
        bezier5Path.addCurve(to: CGPoint(x: 394.18, y: 403.03), controlPoint1: CGPoint(x: 391.36, y: 379.74), controlPoint2: CGPoint(x: 392.71, y: 391.39))
        bezier5Path.addCurve(to: CGPoint(x: 392.37, y: 408.88), controlPoint1: CGPoint(x: 394.5, y: 405.14), controlPoint2: CGPoint(x: 393.84, y: 407.4))
        bezier5Path.addCurve(to: CGPoint(x: 384.79, y: 409.88), controlPoint1: CGPoint(x: 390.43, y: 410.98), controlPoint2: CGPoint(x: 387.15, y: 411.42))
        bezier5Path.addCurve(to: CGPoint(x: 381.82, y: 405.55), controlPoint1: CGPoint(x: 383.3, y: 408.95), controlPoint2: CGPoint(x: 382.18, y: 407.35))
        bezier5Path.addCurve(to: CGPoint(x: 377.57, y: 365.13), controlPoint1: CGPoint(x: 380.16, y: 392.11), controlPoint2: CGPoint(x: 378.53, y: 378.65))
        bezier5Path.addCurve(to: CGPoint(x: 378.01, y: 304.71), controlPoint1: CGPoint(x: 376.19, y: 345.02), controlPoint2: CGPoint(x: 376.24, y: 324.79))
        bezier5Path.addCurve(to: CGPoint(x: 345.31, y: 303.04), controlPoint1: CGPoint(x: 367.1, y: 305.2), controlPoint2: CGPoint(x: 356.13, y: 304.65))
        bezier5Path.addCurve(to: CGPoint(x: 323.53, y: 297.98), controlPoint1: CGPoint(x: 337.95, y: 301.92), controlPoint2: CGPoint(x: 330.61, y: 300.42))
        bezier5Path.addCurve(to: CGPoint(x: 304.86, y: 286.45), controlPoint1: CGPoint(x: 316.67, y: 295.56), controlPoint2: CGPoint(x: 309.93, y: 292.05))
        bezier5Path.addCurve(to: CGPoint(x: 299.11, y: 270.27), controlPoint1: CGPoint(x: 301.01, y: 282.19), controlPoint2: CGPoint(x: 298.47, y: 276.26))
        bezier5Path.addCurve(to: CGPoint(x: 306.35, y: 257.32), controlPoint1: CGPoint(x: 299.61, y: 265.08), controlPoint2: CGPoint(x: 302.69, y: 260.6))
        bezier5Path.addCurve(to: CGPoint(x: 324.72, y: 248.47), controlPoint1: CGPoint(x: 311.59, y: 252.68), controlPoint2: CGPoint(x: 318.16, y: 250.15))
        bezier5Path.addCurve(to: CGPoint(x: 330.94, y: 250.5), controlPoint1: CGPoint(x: 326.94, y: 247.82), controlPoint2: CGPoint(x: 329.47, y: 248.6))
        bezier5Path.addCurve(to: CGPoint(x: 331.5, y: 259.22), controlPoint1: CGPoint(x: 332.85, y: 252.86), controlPoint2: CGPoint(x: 333.35, y: 256.66))
        bezier5Path.addCurve(to: CGPoint(x: 327.08, y: 261.67), controlPoint1: CGPoint(x: 330.45, y: 260.7), controlPoint2: CGPoint(x: 328.73, y: 261.33))
        bezier5Path.addCurve(to: CGPoint(x: 314.5, y: 267.57), controlPoint1: CGPoint(x: 322.61, y: 262.83), controlPoint2: CGPoint(x: 318.12, y: 264.48))
        bezier5Path.addCurve(to: CGPoint(x: 311.64, y: 273.2), controlPoint1: CGPoint(x: 312.95, y: 268.95), controlPoint2: CGPoint(x: 311.22, y: 270.85))
        bezier5Path.addCurve(to: CGPoint(x: 315.42, y: 278.6), controlPoint1: CGPoint(x: 312.19, y: 275.45), controlPoint2: CGPoint(x: 313.79, y: 277.15))
        bezier5Path.addCurve(to: CGPoint(x: 329.83, y: 285.93), controlPoint1: CGPoint(x: 319.66, y: 282.12), controlPoint2: CGPoint(x: 324.71, y: 284.32))
        bezier5Path.addCurve(to: CGPoint(x: 357.74, y: 291.02), controlPoint1: CGPoint(x: 338.89, y: 288.86), controlPoint2: CGPoint(x: 348.33, y: 290.16))
        bezier5Path.addCurve(to: CGPoint(x: 386.5, y: 290.84), controlPoint1: CGPoint(x: 367.31, y: 291.8), controlPoint2: CGPoint(x: 376.94, y: 291.87))
        bezier5Path.addCurve(to: CGPoint(x: 404.96, y: 287.01), controlPoint1: CGPoint(x: 392.74, y: 290.11), controlPoint2: CGPoint(x: 399, y: 289.13))
        bezier5Path.addCurve(to: CGPoint(x: 410.94, y: 283.81), controlPoint1: CGPoint(x: 407.12, y: 286.35), controlPoint2: CGPoint(x: 409.09, y: 285.14))
        bezier5Path.addCurve(to: CGPoint(x: 413.67, y: 278.91), controlPoint1: CGPoint(x: 412.38, y: 282.65), controlPoint2: CGPoint(x: 413.89, y: 280.99))
        bezier5Path.addCurve(to: CGPoint(x: 411.04, y: 272.28), controlPoint1: CGPoint(x: 413.65, y: 276.42), controlPoint2: CGPoint(x: 412.3, y: 274.27))
        bezier5Path.addCurve(to: CGPoint(x: 395.93, y: 259.87), controlPoint1: CGPoint(x: 407.14, y: 266.81), controlPoint2: CGPoint(x: 401.76, y: 262.72))
        bezier5Path.addCurve(to: CGPoint(x: 376.5, y: 253.48), controlPoint1: CGPoint(x: 389.75, y: 256.85), controlPoint2: CGPoint(x: 383.15, y: 254.95))
        bezier5Path.addCurve(to: CGPoint(x: 348.12, y: 252.06), controlPoint1: CGPoint(x: 367.19, y: 251.51), controlPoint2: CGPoint(x: 357.57, y: 250.81))
        bezier5Path.addCurve(to: CGPoint(x: 341.43, y: 248.84), controlPoint1: CGPoint(x: 345.57, y: 252.44), controlPoint2: CGPoint(x: 342.69, y: 251.32))
        bezier5Path.addCurve(to: CGPoint(x: 343.21, y: 239.98), controlPoint1: CGPoint(x: 339.83, y: 245.96), controlPoint2: CGPoint(x: 340.74, y: 241.96))
        bezier5Path.addCurve(to: CGPoint(x: 346.47, y: 238.83), controlPoint1: CGPoint(x: 344.15, y: 239.21), controlPoint2: CGPoint(x: 345.33, y: 238.99))
        bezier5Path.close()
        fillColor2.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 436.52, y: 255.76))
        bezier6Path.addCurve(to: CGPoint(x: 457.59, y: 249.7), controlPoint1: CGPoint(x: 442.9, y: 251.91), controlPoint2: CGPoint(x: 450.2, y: 249.57))
        bezier6Path.addCurve(to: CGPoint(x: 479.59, y: 258.41), controlPoint1: CGPoint(x: 465.57, y: 249.78), controlPoint2: CGPoint(x: 473.55, y: 252.81))
        bezier6Path.addCurve(to: CGPoint(x: 493.95, y: 287.93), controlPoint1: CGPoint(x: 487.72, y: 265.83), controlPoint2: CGPoint(x: 492.36, y: 276.81))
        bezier6Path.addCurve(to: CGPoint(x: 494.53, y: 292.12), controlPoint1: CGPoint(x: 494.25, y: 289.31), controlPoint2: CGPoint(x: 494.09, y: 290.78))
        bezier6Path.addCurve(to: CGPoint(x: 494.41, y: 301.63), controlPoint1: CGPoint(x: 494.69, y: 295.27), controlPoint2: CGPoint(x: 494.92, y: 298.51))
        bezier6Path.addCurve(to: CGPoint(x: 488.6, y: 322.21), controlPoint1: CGPoint(x: 493.75, y: 308.8), controlPoint2: CGPoint(x: 491.98, y: 315.93))
        bezier6Path.addCurve(to: CGPoint(x: 466.57, y: 344.16), controlPoint1: CGPoint(x: 483.43, y: 331.58), controlPoint2: CGPoint(x: 475.37, y: 338.82))
        bezier6Path.addCurve(to: CGPoint(x: 416, y: 364.55), controlPoint1: CGPoint(x: 450.79, y: 353.7), controlPoint2: CGPoint(x: 432.88, y: 357.85))
        bezier6Path.addCurve(to: CGPoint(x: 407.77, y: 358.12), controlPoint1: CGPoint(x: 412.17, y: 366.27), controlPoint2: CGPoint(x: 407.61, y: 362.38))
        bezier6Path.addCurve(to: CGPoint(x: 412.64, y: 351.61), controlPoint1: CGPoint(x: 407.71, y: 355.06), controlPoint2: CGPoint(x: 410.04, y: 352.54))
        bezier6Path.addCurve(to: CGPoint(x: 447.81, y: 338.77), controlPoint1: CGPoint(x: 424.26, y: 347.04), controlPoint2: CGPoint(x: 436.34, y: 343.82))
        bezier6Path.addCurve(to: CGPoint(x: 472.25, y: 323.01), controlPoint1: CGPoint(x: 456.59, y: 334.8), controlPoint2: CGPoint(x: 465.4, y: 330.23))
        bezier6Path.addCurve(to: CGPoint(x: 480.65, y: 308.17), controlPoint1: CGPoint(x: 476.14, y: 318.9), controlPoint2: CGPoint(x: 479.19, y: 313.82))
        bezier6Path.addCurve(to: CGPoint(x: 480.41, y: 283.83), controlPoint1: CGPoint(x: 482.72, y: 300.25), controlPoint2: CGPoint(x: 482.61, y: 291.71))
        bezier6Path.addCurve(to: CGPoint(x: 472.96, y: 270.41), controlPoint1: CGPoint(x: 479.01, y: 278.8), controlPoint2: CGPoint(x: 476.55, y: 274.05))
        bezier6Path.addCurve(to: CGPoint(x: 459.95, y: 263.42), controlPoint1: CGPoint(x: 469.45, y: 266.72), controlPoint2: CGPoint(x: 464.87, y: 264.11))
        bezier6Path.addCurve(to: CGPoint(x: 442.82, y: 267.39), controlPoint1: CGPoint(x: 454.02, y: 262.48), controlPoint2: CGPoint(x: 447.97, y: 264.29))
        bezier6Path.addCurve(to: CGPoint(x: 437.81, y: 268.13), controlPoint1: CGPoint(x: 441.34, y: 268.35), controlPoint2: CGPoint(x: 439.48, y: 268.71))
        bezier6Path.addCurve(to: CGPoint(x: 433.45, y: 259.52), controlPoint1: CGPoint(x: 434.6, y: 266.98), controlPoint2: CGPoint(x: 432.52, y: 263.01))
        bezier6Path.addCurve(to: CGPoint(x: 436.52, y: 255.76), controlPoint1: CGPoint(x: 433.91, y: 257.87), controlPoint2: CGPoint(x: 435.12, y: 256.57))
        bezier6Path.close()
        fillColor2.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 187.14, y: 256.37))
        bezier7Path.addCurve(to: CGPoint(x: 193.18, y: 251.98), controlPoint1: CGPoint(x: 188.04, y: 253.74), controlPoint2: CGPoint(x: 190.64, y: 252.16))
        bezier7Path.addCurve(to: CGPoint(x: 219.62, y: 254.44), controlPoint1: CGPoint(x: 202.03, y: 251.3), controlPoint2: CGPoint(x: 211.06, y: 251.82))
        bezier7Path.addCurve(to: CGPoint(x: 239.63, y: 268.34), controlPoint1: CGPoint(x: 227.36, y: 256.84), controlPoint2: CGPoint(x: 234.7, y: 261.45))
        bezier7Path.addCurve(to: CGPoint(x: 243.68, y: 286.03), controlPoint1: CGPoint(x: 243.2, y: 273.3), controlPoint2: CGPoint(x: 244.97, y: 279.86))
        bezier7Path.addCurve(to: CGPoint(x: 234.71, y: 300.35), controlPoint1: CGPoint(x: 242.63, y: 291.84), controlPoint2: CGPoint(x: 239.07, y: 296.81))
        bezier7Path.addCurve(to: CGPoint(x: 214.58, y: 310.35), controlPoint1: CGPoint(x: 228.78, y: 305.2), controlPoint2: CGPoint(x: 221.7, y: 308.12))
        bezier7Path.addCurve(to: CGPoint(x: 193.82, y: 314.3), controlPoint1: CGPoint(x: 207.82, y: 312.44), controlPoint2: CGPoint(x: 200.86, y: 313.89))
        bezier7Path.addCurve(to: CGPoint(x: 199.82, y: 372.96), controlPoint1: CGPoint(x: 197.99, y: 333.52), controlPoint2: CGPoint(x: 199.81, y: 353.26))
        bezier7Path.addCurve(to: CGPoint(x: 194.68, y: 435.55), controlPoint1: CGPoint(x: 199.84, y: 393.93), controlPoint2: CGPoint(x: 197.86, y: 414.86))
        bezier7Path.addCurve(to: CGPoint(x: 292.93, y: 449.42), controlPoint1: CGPoint(x: 226.27, y: 446.52), controlPoint2: CGPoint(x: 259.77, y: 450.77))
        bezier7Path.addCurve(to: CGPoint(x: 334.88, y: 444.8), controlPoint1: CGPoint(x: 306.99, y: 448.87), controlPoint2: CGPoint(x: 320.99, y: 447.14))
        bezier7Path.addCurve(to: CGPoint(x: 339.57, y: 443.98), controlPoint1: CGPoint(x: 336.45, y: 444.56), controlPoint2: CGPoint(x: 337.94, y: 443.66))
        bezier7Path.addCurve(to: CGPoint(x: 345.2, y: 451.77), controlPoint1: CGPoint(x: 343.06, y: 444.31), controlPoint2: CGPoint(x: 345.8, y: 448.09))
        bezier7Path.addCurve(to: CGPoint(x: 338.35, y: 457.66), controlPoint1: CGPoint(x: 344.78, y: 455.25), controlPoint2: CGPoint(x: 341.61, y: 457.85))
        bezier7Path.addCurve(to: CGPoint(x: 291.77, y: 462.77), controlPoint1: CGPoint(x: 322.94, y: 460.32), controlPoint2: CGPoint(x: 307.39, y: 462.24))
        bezier7Path.addCurve(to: CGPoint(x: 278.96, y: 463.14), controlPoint1: CGPoint(x: 287.52, y: 463.26), controlPoint2: CGPoint(x: 283.23, y: 463.08))
        bezier7Path.addCurve(to: CGPoint(x: 269.65, y: 462.8), controlPoint1: CGPoint(x: 275.86, y: 463.06), controlPoint2: CGPoint(x: 272.74, y: 463.22))
        bezier7Path.addCurve(to: CGPoint(x: 228.25, y: 458.3), controlPoint1: CGPoint(x: 255.77, y: 462.32), controlPoint2: CGPoint(x: 241.96, y: 460.57))
        bezier7Path.addCurve(to: CGPoint(x: 185.85, y: 446.25), controlPoint1: CGPoint(x: 213.79, y: 455.79), controlPoint2: CGPoint(x: 199.4, y: 452.27))
        bezier7Path.addCurve(to: CGPoint(x: 181.58, y: 441.48), controlPoint1: CGPoint(x: 183.88, y: 445.4), controlPoint2: CGPoint(x: 182.1, y: 443.74))
        bezier7Path.addCurve(to: CGPoint(x: 182.2, y: 433.83), controlPoint1: CGPoint(x: 181.02, y: 438.91), controlPoint2: CGPoint(x: 181.91, y: 436.36))
        bezier7Path.addCurve(to: CGPoint(x: 182.7, y: 323.07), controlPoint1: CGPoint(x: 187.96, y: 397.3), controlPoint2: CGPoint(x: 189.74, y: 359.55))
        bezier7Path.addCurve(to: CGPoint(x: 181.01, y: 314.11), controlPoint1: CGPoint(x: 182.2, y: 320.07), controlPoint2: CGPoint(x: 181.3, y: 317.15))
        bezier7Path.addCurve(to: CGPoint(x: 152.87, y: 308.58), controlPoint1: CGPoint(x: 171.51, y: 313.12), controlPoint2: CGPoint(x: 161.92, y: 311.93))
        bezier7Path.addCurve(to: CGPoint(x: 136.34, y: 297.27), controlPoint1: CGPoint(x: 146.67, y: 306.21), controlPoint2: CGPoint(x: 140.58, y: 302.76))
        bezier7Path.addCurve(to: CGPoint(x: 131.56, y: 284.28), controlPoint1: CGPoint(x: 133.48, y: 293.63), controlPoint2: CGPoint(x: 131.83, y: 288.99))
        bezier7Path.addCurve(to: CGPoint(x: 141.79, y: 264.33), controlPoint1: CGPoint(x: 132.26, y: 276.5), controlPoint2: CGPoint(x: 136.48, y: 269.55))
        bezier7Path.addCurve(to: CGPoint(x: 166.77, y: 252.82), controlPoint1: CGPoint(x: 148.6, y: 257.73), controlPoint2: CGPoint(x: 157.45, y: 253.13))
        bezier7Path.addCurve(to: CGPoint(x: 171.79, y: 254.2), controlPoint1: CGPoint(x: 168.51, y: 252.75), controlPoint2: CGPoint(x: 170.41, y: 252.97))
        bezier7Path.addCurve(to: CGPoint(x: 171.43, y: 265.35), controlPoint1: CGPoint(x: 175.01, y: 256.9), controlPoint2: CGPoint(x: 174.97, y: 262.99))
        bezier7Path.addCurve(to: CGPoint(x: 165.24, y: 266.4), controlPoint1: CGPoint(x: 169.58, y: 266.64), controlPoint2: CGPoint(x: 167.29, y: 266.04))
        bezier7Path.addCurve(to: CGPoint(x: 151.43, y: 273.4), controlPoint1: CGPoint(x: 160.15, y: 267.37), controlPoint2: CGPoint(x: 155.48, y: 270.05))
        bezier7Path.addCurve(to: CGPoint(x: 144.53, y: 283.51), controlPoint1: CGPoint(x: 148.45, y: 276.11), controlPoint2: CGPoint(x: 145.45, y: 279.31))
        bezier7Path.addCurve(to: CGPoint(x: 147.4, y: 290.38), controlPoint1: CGPoint(x: 143.87, y: 286.21), controlPoint2: CGPoint(x: 145.53, y: 288.75))
        bezier7Path.addCurve(to: CGPoint(x: 162.13, y: 297.29), controlPoint1: CGPoint(x: 151.64, y: 294.02), controlPoint2: CGPoint(x: 156.95, y: 295.8))
        bezier7Path.addCurve(to: CGPoint(x: 190.42, y: 300.97), controlPoint1: CGPoint(x: 171.36, y: 299.79), controlPoint2: CGPoint(x: 180.89, y: 301.17))
        bezier7Path.addCurve(to: CGPoint(x: 213.77, y: 296.62), controlPoint1: CGPoint(x: 198.36, y: 300.85), controlPoint2: CGPoint(x: 206.21, y: 299.15))
        bezier7Path.addCurve(to: CGPoint(x: 226.32, y: 290.2), controlPoint1: CGPoint(x: 218.2, y: 295.1), controlPoint2: CGPoint(x: 222.5, y: 293.04))
        bezier7Path.addCurve(to: CGPoint(x: 231.22, y: 283.88), controlPoint1: CGPoint(x: 228.44, y: 288.61), controlPoint2: CGPoint(x: 230.3, y: 286.49))
        bezier7Path.addCurve(to: CGPoint(x: 228.82, y: 275.21), controlPoint1: CGPoint(x: 231.97, y: 280.78), controlPoint2: CGPoint(x: 230.46, y: 277.68))
        bezier7Path.addCurve(to: CGPoint(x: 217.23, y: 267.7), controlPoint1: CGPoint(x: 225.91, y: 271.38), controlPoint2: CGPoint(x: 221.6, y: 269.08))
        bezier7Path.addCurve(to: CGPoint(x: 193.12, y: 265.39), controlPoint1: CGPoint(x: 209.43, y: 265.31), controlPoint2: CGPoint(x: 201.19, y: 264.66))
        bezier7Path.addCurve(to: CGPoint(x: 187.14, y: 256.37), controlPoint1: CGPoint(x: 188.88, y: 265.8), controlPoint2: CGPoint(x: 185.56, y: 260.44))
        bezier7Path.close()
        fillColor2.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 271.65, y: 285.59))
        bezier8Path.addCurve(to: CGPoint(x: 278.63, y: 295.09), controlPoint1: CGPoint(x: 276.5, y: 284.07), controlPoint2: CGPoint(x: 281.18, y: 290.51))
        bezier8Path.addCurve(to: CGPoint(x: 271.78, y: 315.3), controlPoint1: CGPoint(x: 274.65, y: 301.02), controlPoint2: CGPoint(x: 273.1, y: 308.27))
        bezier8Path.addCurve(to: CGPoint(x: 270.3, y: 330.49), controlPoint1: CGPoint(x: 270.78, y: 320.29), controlPoint2: CGPoint(x: 270.27, y: 325.39))
        bezier8Path.addCurve(to: CGPoint(x: 272.69, y: 337.17), controlPoint1: CGPoint(x: 270.44, y: 332.87), controlPoint2: CGPoint(x: 270.5, y: 335.81))
        bezier8Path.addCurve(to: CGPoint(x: 282.41, y: 338.11), controlPoint1: CGPoint(x: 275.6, y: 338.97), controlPoint2: CGPoint(x: 279.21, y: 338.74))
        bezier8Path.addCurve(to: CGPoint(x: 300.71, y: 328), controlPoint1: CGPoint(x: 289.2, y: 336.53), controlPoint2: CGPoint(x: 295.71, y: 333.18))
        bezier8Path.addCurve(to: CGPoint(x: 304.59, y: 326.09), controlPoint1: CGPoint(x: 301.74, y: 326.91), controlPoint2: CGPoint(x: 303.12, y: 326.15))
        bezier8Path.addCurve(to: CGPoint(x: 311.44, y: 333.84), controlPoint1: CGPoint(x: 308.39, y: 325.87), controlPoint2: CGPoint(x: 311.97, y: 329.79))
        bezier8Path.addCurve(to: CGPoint(x: 309.24, y: 337.9), controlPoint1: CGPoint(x: 311.27, y: 335.45), controlPoint2: CGPoint(x: 310.34, y: 336.83))
        bezier8Path.addCurve(to: CGPoint(x: 288.75, y: 350.33), controlPoint1: CGPoint(x: 303.47, y: 343.7), controlPoint2: CGPoint(x: 296.4, y: 348.07))
        bezier8Path.addCurve(to: CGPoint(x: 268.14, y: 349.72), controlPoint1: CGPoint(x: 282.04, y: 352.19), controlPoint2: CGPoint(x: 274.64, y: 352.67))
        bezier8Path.addCurve(to: CGPoint(x: 258.42, y: 337.51), controlPoint1: CGPoint(x: 263.31, y: 347.57), controlPoint2: CGPoint(x: 259.68, y: 342.87))
        bezier8Path.addCurve(to: CGPoint(x: 259.03, y: 314.87), controlPoint1: CGPoint(x: 256.6, y: 330.07), controlPoint2: CGPoint(x: 257.8, y: 322.3))
        bezier8Path.addCurve(to: CGPoint(x: 266.9, y: 289.66), controlPoint1: CGPoint(x: 260.58, y: 306.18), controlPoint2: CGPoint(x: 262.3, y: 297.2))
        bezier8Path.addCurve(to: CGPoint(x: 271.65, y: 285.59), controlPoint1: CGPoint(x: 267.97, y: 287.78), controlPoint2: CGPoint(x: 269.58, y: 286.1))
        bezier8Path.close()
        fillColor2.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 321.55, y: 398.02))
        bezier9Path.addCurve(to: CGPoint(x: 303.85, y: 404.94), controlPoint1: CGPoint(x: 316.22, y: 401.69), controlPoint2: CGPoint(x: 310.06, y: 403.77))
        bezier9Path.addCurve(to: CGPoint(x: 276.39, y: 405.92), controlPoint1: CGPoint(x: 294.8, y: 406.68), controlPoint2: CGPoint(x: 285.53, y: 406.56))
        bezier9Path.addCurve(to: CGPoint(x: 260.75, y: 403.37), controlPoint1: CGPoint(x: 271.14, y: 405.44), controlPoint2: CGPoint(x: 265.79, y: 405.17))
        bezier9Path.addCurve(to: CGPoint(x: 244.5, y: 390.56), controlPoint1: CGPoint(x: 254.22, y: 401.18), controlPoint2: CGPoint(x: 247.92, y: 397.05))
        bezier9Path.addCurve(to: CGPoint(x: 241.15, y: 380.91), controlPoint1: CGPoint(x: 242.76, y: 387.63), controlPoint2: CGPoint(x: 241.86, y: 384.27))
        bezier9Path.addCurve(to: CGPoint(x: 336.47, y: 381.5), controlPoint1: CGPoint(x: 272.92, y: 380.2), controlPoint2: CGPoint(x: 304.71, y: 380.45))
        bezier9Path.addCurve(to: CGPoint(x: 321.55, y: 398.02), controlPoint1: CGPoint(x: 332.65, y: 388.02), controlPoint2: CGPoint(x: 327.68, y: 393.88))
        bezier9Path.close()
        bezier9Path.move(to: CGPoint(x: 350.06, y: 369.5))
        bezier9Path.addCurve(to: CGPoint(x: 343.03, y: 368.33), controlPoint1: CGPoint(x: 347.96, y: 368.14), controlPoint2: CGPoint(x: 345.38, y: 368.46))
        bezier9Path.addCurve(to: CGPoint(x: 251.5, y: 367.28), controlPoint1: CGPoint(x: 312.54, y: 367.22), controlPoint2: CGPoint(x: 282.01, y: 366.75))
        bezier9Path.addCurve(to: CGPoint(x: 233.88, y: 367.7), controlPoint1: CGPoint(x: 245.63, y: 367.45), controlPoint2: CGPoint(x: 239.75, y: 367.42))
        bezier9Path.addCurve(to: CGPoint(x: 228.19, y: 374.58), controlPoint1: CGPoint(x: 230.62, y: 367.94), controlPoint2: CGPoint(x: 228.25, y: 371.24))
        bezier9Path.addCurve(to: CGPoint(x: 239.04, y: 404.67), controlPoint1: CGPoint(x: 227.71, y: 385.61), controlPoint2: CGPoint(x: 231.74, y: 396.81))
        bezier9Path.addCurve(to: CGPoint(x: 256.01, y: 415.81), controlPoint1: CGPoint(x: 243.77, y: 409.74), controlPoint2: CGPoint(x: 249.7, y: 413.44))
        bezier9Path.addCurve(to: CGPoint(x: 278.95, y: 419.31), controlPoint1: CGPoint(x: 263.38, y: 418.48), controlPoint2: CGPoint(x: 271.23, y: 418.92))
        bezier9Path.addCurve(to: CGPoint(x: 308.47, y: 417.5), controlPoint1: CGPoint(x: 288.8, y: 419.67), controlPoint2: CGPoint(x: 298.78, y: 419.65))
        bezier9Path.addCurve(to: CGPoint(x: 337.96, y: 401.39), controlPoint1: CGPoint(x: 319.43, y: 415.12), controlPoint2: CGPoint(x: 329.97, y: 409.8))
        bezier9Path.addCurve(to: CGPoint(x: 351.32, y: 380.54), controlPoint1: CGPoint(x: 343.64, y: 395.45), controlPoint2: CGPoint(x: 347.95, y: 388.18))
        bezier9Path.addCurve(to: CGPoint(x: 352.83, y: 376.23), controlPoint1: CGPoint(x: 351.92, y: 379.14), controlPoint2: CGPoint(x: 352.62, y: 377.76))
        bezier9Path.addCurve(to: CGPoint(x: 350.06, y: 369.5), controlPoint1: CGPoint(x: 353.32, y: 373.66), controlPoint2: CGPoint(x: 352.2, y: 370.84))
        bezier9Path.close()
        fillColor2.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 429.04, y: 440.63))
        bezier10Path.addCurve(to: CGPoint(x: 444.76, y: 431.97), controlPoint1: CGPoint(x: 431.61, y: 434.44), controlPoint2: CGPoint(x: 438.46, y: 430.34))
        bezier10Path.addCurve(to: CGPoint(x: 444.75, y: 443.04), controlPoint1: CGPoint(x: 444.75, y: 435.66), controlPoint2: CGPoint(x: 444.76, y: 439.35))
        bezier10Path.addCurve(to: CGPoint(x: 433.23, y: 445.25), controlPoint1: CGPoint(x: 440.88, y: 442.23), controlPoint2: CGPoint(x: 436.33, y: 442.27))
        bezier10Path.addCurve(to: CGPoint(x: 429.62, y: 455.87), controlPoint1: CGPoint(x: 430.39, y: 447.87), controlPoint2: CGPoint(x: 429.75, y: 452.09))
        bezier10Path.addCurve(to: CGPoint(x: 429.61, y: 475.2), controlPoint1: CGPoint(x: 429.59, y: 462.31), controlPoint2: CGPoint(x: 429.62, y: 468.76))
        bezier10Path.addCurve(to: CGPoint(x: 418.22, y: 475.21), controlPoint1: CGPoint(x: 425.81, y: 475.21), controlPoint2: CGPoint(x: 422.01, y: 475.2))
        bezier10Path.addCurve(to: CGPoint(x: 418.2, y: 432.78), controlPoint1: CGPoint(x: 418.18, y: 461.06), controlPoint2: CGPoint(x: 418.21, y: 446.92))
        bezier10Path.addLine(to: CGPoint(x: 429.08, y: 432.78))
        bezier10Path.addCurve(to: CGPoint(x: 429.04, y: 440.63), controlPoint1: CGPoint(x: 429.07, y: 435.4), controlPoint2: CGPoint(x: 429.13, y: 438.02))
        bezier10Path.close()
        fillColor3.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 399.31, y: 461.64))
        bezier11Path.addCurve(to: CGPoint(x: 393.06, y: 467.19), controlPoint1: CGPoint(x: 398.16, y: 464.34), controlPoint2: CGPoint(x: 395.89, y: 466.69))
        bezier11Path.addCurve(to: CGPoint(x: 384.54, y: 464.13), controlPoint1: CGPoint(x: 389.98, y: 467.94), controlPoint2: CGPoint(x: 386.55, y: 466.74))
        bezier11Path.addCurve(to: CGPoint(x: 381.7, y: 454.21), controlPoint1: CGPoint(x: 382.44, y: 461.36), controlPoint2: CGPoint(x: 381.7, y: 457.69))
        bezier11Path.addCurve(to: CGPoint(x: 383.86, y: 444.79), controlPoint1: CGPoint(x: 381.66, y: 450.96), controlPoint2: CGPoint(x: 382.18, y: 447.56))
        bezier11Path.addCurve(to: CGPoint(x: 388.64, y: 440.91), controlPoint1: CGPoint(x: 384.95, y: 442.94), controlPoint2: CGPoint(x: 386.67, y: 441.54))
        bezier11Path.addCurve(to: CGPoint(x: 396.27, y: 442.21), controlPoint1: CGPoint(x: 391.19, y: 440.15), controlPoint2: CGPoint(x: 394.12, y: 440.49))
        bezier11Path.addCurve(to: CGPoint(x: 400.47, y: 450.49), controlPoint1: CGPoint(x: 398.75, y: 444.14), controlPoint2: CGPoint(x: 400.01, y: 447.35))
        bezier11Path.addCurve(to: CGPoint(x: 399.31, y: 461.64), controlPoint1: CGPoint(x: 400.97, y: 454.22), controlPoint2: CGPoint(x: 400.76, y: 458.16))
        bezier11Path.close()
        bezier11Path.move(to: CGPoint(x: 411.91, y: 449.35))
        bezier11Path.addCurve(to: CGPoint(x: 404.87, y: 435.13), controlPoint1: CGPoint(x: 411.26, y: 443.94), controlPoint2: CGPoint(x: 408.99, y: 438.53))
        bezier11Path.addCurve(to: CGPoint(x: 391.11, y: 432.02), controlPoint1: CGPoint(x: 401.05, y: 431.91), controlPoint2: CGPoint(x: 395.83, y: 430.9))
        bezier11Path.addCurve(to: CGPoint(x: 382.09, y: 437.83), controlPoint1: CGPoint(x: 387.58, y: 432.71), controlPoint2: CGPoint(x: 384.15, y: 434.62))
        bezier11Path.addCurve(to: CGPoint(x: 382.12, y: 416.72), controlPoint1: CGPoint(x: 382.12, y: 430.79), controlPoint2: CGPoint(x: 382.07, y: 423.75))
        bezier11Path.addCurve(to: CGPoint(x: 370.65, y: 416.7), controlPoint1: CGPoint(x: 378.3, y: 416.66), controlPoint2: CGPoint(x: 374.47, y: 416.7))
        bezier11Path.addCurve(to: CGPoint(x: 370.66, y: 475.19), controlPoint1: CGPoint(x: 370.66, y: 436.19), controlPoint2: CGPoint(x: 370.64, y: 455.7))
        bezier11Path.addCurve(to: CGPoint(x: 381.46, y: 475.2), controlPoint1: CGPoint(x: 374.26, y: 475.21), controlPoint2: CGPoint(x: 377.86, y: 475.2))
        bezier11Path.addCurve(to: CGPoint(x: 381.48, y: 469.78), controlPoint1: CGPoint(x: 381.46, y: 473.39), controlPoint2: CGPoint(x: 381.46, y: 471.58))
        bezier11Path.addCurve(to: CGPoint(x: 386.96, y: 474.78), controlPoint1: CGPoint(x: 382.72, y: 472.02), controlPoint2: CGPoint(x: 384.62, y: 473.88))
        bezier11Path.addCurve(to: CGPoint(x: 397, y: 476.09), controlPoint1: CGPoint(x: 390.14, y: 476.01), controlPoint2: CGPoint(x: 393.62, y: 476.5))
        bezier11Path.addCurve(to: CGPoint(x: 409.09, y: 467.5), controlPoint1: CGPoint(x: 402.03, y: 475.54), controlPoint2: CGPoint(x: 406.62, y: 472.16))
        bezier11Path.addCurve(to: CGPoint(x: 411.91, y: 449.35), controlPoint1: CGPoint(x: 412.11, y: 462.06), controlPoint2: CGPoint(x: 412.54, y: 455.5))
        bezier11Path.close()
        fillColor3.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 349.86, y: 462.48))
        bezier12Path.addLine(to: CGPoint(x: 362.44, y: 462.48))
        bezier12Path.addLine(to: CGPoint(x: 362.44, y: 475.2))
        bezier12Path.addCurve(to: CGPoint(x: 349.88, y: 475.21), controlPoint1: CGPoint(x: 358.25, y: 475.21), controlPoint2: CGPoint(x: 354.07, y: 475.2))
        bezier12Path.addCurve(to: CGPoint(x: 349.86, y: 462.48), controlPoint1: CGPoint(x: 349.84, y: 470.96), controlPoint2: CGPoint(x: 349.87, y: 466.72))
        bezier12Path.close()
        fillColor3.setFill()
        bezier12Path.fill()
        
        context.restoreGState()

    }

    //// Generated Images

    public dynamic class var imageOfBackButton: UIImage {
        if Cache.imageOfBackButton != nil {
            return Cache.imageOfBackButton!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 120, height: 120), false, 0)
            ConferenceStyleKit.drawBackButton()

        Cache.imageOfBackButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets(top: 0, left: 10, bottom: 0, right: 10), resizingMode: .stretch)
        UIGraphicsEndImageContext()

        return Cache.imageOfBackButton!
    }

    public dynamic class var imageOfCloseButton: UIImage {
        if Cache.imageOfCloseButton != nil {
            return Cache.imageOfCloseButton!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 100, height: 100), false, 0)
            ConferenceStyleKit.drawCloseButton()

        Cache.imageOfCloseButton = UIGraphicsGetImageFromCurrentImageContext()!.resizableImage(withCapInsets: UIEdgeInsets.zero, resizingMode: .stretch)
        UIGraphicsEndImageContext()

        return Cache.imageOfCloseButton!
    }

    public dynamic class var imageOfCocoaHeadsLogo: UIImage {
        if Cache.imageOfCocoaHeadsLogo != nil {
            return Cache.imageOfCocoaHeadsLogo!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 600, height: 600), false, 0)
            ConferenceStyleKit.drawCocoaHeadsLogo()

        Cache.imageOfCocoaHeadsLogo = UIGraphicsGetImageFromCurrentImageContext()!.withRenderingMode(.alwaysTemplate)
        UIGraphicsEndImageContext()

        return Cache.imageOfCocoaHeadsLogo!
    }

    //// Customization Infrastructure

    @IBOutlet dynamic var backButtonTargets: [AnyObject]! {
        get { return Cache.backButtonTargets }
        set {
            Cache.backButtonTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ConferenceStyleKit.imageOfBackButton)
            }
        }
    }

    @IBOutlet dynamic var closeButtonTargets: [AnyObject]! {
        get { return Cache.closeButtonTargets }
        set {
            Cache.closeButtonTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ConferenceStyleKit.imageOfCloseButton)
            }
        }
    }

    @IBOutlet dynamic var cocoaHeadsLogoTargets: [AnyObject]! {
        get { return Cache.cocoaHeadsLogoTargets }
        set {
            Cache.cocoaHeadsLogoTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: ConferenceStyleKit.imageOfCocoaHeadsLogo)
            }
        }
    }




    @objc public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
